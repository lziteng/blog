<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzt.ssm.blog.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.lzt.ssm.blog.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_pass" jdbcType="VARCHAR" property="userPass"/>
        <result column="user_nickname" jdbcType="VARCHAR" property="userNickname"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_url" jdbcType="VARCHAR" property="userUrl"/>
        <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar"/>
        <result column="user_last_login_ip" jdbcType="VARCHAR" property="userLastLoginIp"/>
        <result column="user_register_time" jdbcType="TIMESTAMP" property="userRegisterTime"/>
        <result column="user_last_login_time" jdbcType="TIMESTAMP" property="userLastLoginTime"/>
        <result column="user_status" jdbcType="INTEGER" property="userStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, user_name, user_pass, user_nickname, user_email, user_url, user_avatar, 
    user_last_login_ip, user_register_time, user_last_login_time, user_status
  </sql>

    <select id="getUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.lzt.ssm.blog.entity.User">
    insert into user (user_id, user_name, user_pass, 
      user_nickname, user_email, user_url, 
      user_avatar, user_last_login_ip, user_register_time, 
      user_last_login_time, user_status)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP}, 
      #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER})
  </insert>

    <update id="update" parameterType="com.lzt.ssm.blog.entity.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPass != null">
                user_pass = #{userPass,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                user_nickname = #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userUrl != null">
                user_url = #{userUrl,jdbcType=VARCHAR},
            </if>
            <if test="userAvatar != null">
                user_avatar = #{userAvatar,jdbcType=VARCHAR},
            </if>
            <if test="userLastLoginIp != null">
                user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="userRegisterTime != null">
                user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userLastLoginTime != null">
                user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="listUser" resultType="com.lzt.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        order by user_status asc
    </select>

    <select id="getUserByNameOrEmail" parameterType="String" resultType="com.lzt.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            user_name=#{value} or user_email=#{value}
        </where>
        and user_status>0
        limit 1
    </select>

    <select id="getUserByName" parameterType="String" resultType="com.lzt.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            user_name=#{value}
        </where>
        limit 1
    </select>

    <select id="getUserByEmail" parameterType="String" resultType="com.lzt.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            user_email=#{value}
        </where>
        limit 1
    </select>
</mapper>